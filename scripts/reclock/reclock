#!/bin/bash

setlevel() {
  local level="$1"; shift

  for f in $(sudo find /sys/kernel/debug/dri -name pstate); do
    readarray -t available < <(sudo awk -F': ' '/^[^A]/ { print $1 }' "$f")
    if [ "${level}" -ge ${#available[@]} ]; then
      >&2 echo "Cannot set power state: provided level is out of range (must be less than ${#available[@]})."
      exit 1
    fi

    echo "${available[$level]}" | sudo tee "$f" > /dev/null
  done
}

show() {
  for f in $(sudo find /sys/kernel/debug/dri -name pstate); do
    dir="${f%/*}"
    card="${dir##*/}"

    printf "%s\t" "${card}"
    sudo cat "$f" | tail -n 1 | awk -F": " '{ print $2 }'
  done
}

HELP=$(cat <<HELP
Usage: ${BASH_SOURCE##*/} [OPTION]

Show or set power state settings for GPUs that support reclocking.
If no OPTION is provided, "--show" is assumed.

OPTION
  --max         Reclock all GPUs to their highest power state setting.
  --min         Reclock all GPUs to their lowest power state setting.
  --on          Same as --max.
  --off         Same as --min.
  --level n     Reclock all GPUs to the power state at the given index. Index
                starts at 0.
  --show        Show current power state for each GPU.
HELP
)

cmd=$1; shift
case "${cmd}" in
  -h|--help)
    echo "${HELP}"
    exit 0
    ;;
  --max|--on)
    >&2 echo "Reclocking GPU: max"
    setlevel -1
    ;;
  --min|--off)
    >&2 echo "Reclocking GPU: min"
    setlevel 0
    ;;
  --level)
    level=$1; shift
    >&2 echo "Reclocking GPU: level ${level}"
    setlevel "${level}"
esac

show
