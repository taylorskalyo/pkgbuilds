# vim: ft=zsh

# Profile zsh with zprof
#zmodload zsh/zprof

zstyle :compinstall filename "${HOME}/.zshrc"

HISTFILE="${HOME}/.histfile"
HISTSIZE=1000
SAVEHIST="${HISTSIZE}"
KEYTIMEOUT=3

# Options
setopt appendhistory
setopt sharehistory
setopt histignorespace
setopt histignoredups
setopt correct

# Prompt
PROMPT="\
%B\
%(!.%F{red}.%F{green})%n \
%F{blue}%~ \
%(!.%F{red}.%F{green})%# \
%f%b"
_RPROMPT="\
%F{white}\
%(0?..  %F{red}EXIT %?)\
%(1j.  %F{yellow}JOBS %j.)\
%f"
RPROMPT=${_RPROMPT}

# Display execution start and elapsed time
zmodload zsh/datetime
function _exec_time_preexec() {
  exec_start="${epochtime[1]}${epochtime[2]}"
}

function _exec_time_precmd() {
  if [ $exec_start ]; then
    exec_end="${epochtime[1]}${epochtime[2]}"
    elapsed=$(( ($exec_end-$exec_start) / 1000000 )) # in ms

    RPROMPT="\
${_RPROMPT}\
%F{12}  ${elapsed}ms $(date --date=@${exec_start:0:10} +'%H:%M:%S')\
%f"
    unset exec_start
  fi
}

precmd_functions+=(_exec_time_precmd)
preexec_functions+=(_exec_time_preexec)

# Completion
autoload -Uz compinit bashcompinit

# By default compinit checks for new completions and dumps them to a cache. It
# also performs a security check to make sure completion files aren't owned by
# another user.
#
# Specify '-C' to init completions without these time-consuming checks. Then
# call again in the background to create a new dump if needed.
compinit -C
compinit &!
bashcompinit

# Edit line in vim
autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# Key bindings
bindkey -v
bindkey '^R' history-incremental-search-backward
bindkey '^F' history-incremental-search-forward
bindkey '^?' backward-delete-char # https://superuser.com/a/533685

# Source shared shell resources
if [[ -d "${XDG_CONFIG_HOME:=$HOME/.config}/shell" ]]; then
  for file in "${XDG_CONFIG_HOME}"/shell/*; do
    [[ -r "${file}" ]] && source "${file}"
  done
fi
