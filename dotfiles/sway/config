# Default config for sway
#

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu sh -c '[ -f ~/.cache/wal/colors-bemenu.sh ] && source ~/.cache/wal/colors-bemenu.sh; bemenu-run' | xargs swaymsg exec --


### Volume
bindsym XF86AudioLowerVolume exec "pactl set-sink-volume @DEFAULT_SINK@ -5%; pkill -RTMIN+10 i3blocks"
bindsym XF86AudioRaiseVolume exec "pactl set-sink-volume @DEFAULT_SINK@ +5%; pkill -RTMIN+10 i3blocks"
bindsym XF86AudioMute exec "pactl set-sink-mute @DEFAULT_SINK@ toggle; pkill -RTMIN+10 i3blocks"
bindsym XF86AudioMicMute exec "pactl set-source-mute @DEFAULT_SOURCE@ toggle"

### Theme
set $gnome-schema org.gnome.desktop.interface
set $gtk-theme 'oomox-wal'
exec_always {
    [ -e ~/.themes/$theme ] && gsettings set $gnome-schema gtk-theme $theme
}

# Hide title bars
default_border pixel 1

font pango:Meslo LG M 9

### Colors
set $background #232629
set $foreground #c2c8c9
set $color0 #232629
set $color1 #cc6666
set $color2 #b5bd68
set $color3 #f0c674
set $color4 #81a2be
set $color5 #b294bb
set $color6 #8abeb7
set $color7 #c2c8c9
set $color8 #939899
set $color9 #de935f
set $color10 #313437
set $color11 #55585b
set $color12 #b4b7b4
set $color13 #dde0e3
set $color14 #a3685a
set $color15 #ffffff

# Prefer wal colors if available
include ~/.cache/wal/colors-sway
set $transparent #00000000

# class                 border      background  text        indicator   child border
client.focused          $background $color10    $foreground $color12    $color11
client.focused_inactive $background $color10    $foreground $background $color10
client.unfocused        $background $background $foreground $background $background
client.urgent           $background $color1     $background $color1     $color1
client.placeholder      $background $background $foreground $background $background
client.background       $background


### Output configuration
output * bg ~/.cache/wal/colors-wallpaper.svg fit $background
include ~/.config/sway/outputs

### Input configuration
input type:keyboard {
    xkb_options ctrl:nocaps
}
include ~/.config/sway/inputs

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term -e tmux

    # Kill focused window
    bindsym $mod+w kill

    # Start your launcher
    bindsym $mod+space exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+bracketright workspace next
    bindsym $mod+bracketleft workspace prev

    bindsym $mod+Shift+bracketright move container to workspace next
    bindsym $mod+Shift+bracketleft move container to workspace prev

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+backslash splith
    bindsym $mod+minus splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+m layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+t floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+p focus parent
    bindsym $mod+c focus child
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    status_command i3blocks

    colors {
        statusline $foreground
        background $background
        separator  $color11

        # class            border      background  text
        focused_workspace  $background $background $color2
        inactive_workspace $background $background $color11
        active_workspace   $background $background $foreground
        urgent_workspace   $color1     $color1     $background
        binding_mode       $color1     $color1     $background
    }
}

# Rules
for_window [title=".*Android Emulator.*"] floating enable

include /etc/sway/config.d/*
exec_always "systemctl --user import-environment; systemctl --user start sway-session.target"
